package de.thb.dim.pizzaProntoTest;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertTrue;import java.lang.reflect.Constructor;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.lang.reflect.Modifier;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;import de.thb.dim.pizzaPronto.valueObjects.PersonVO;/** * The methods of the class PersonVO are tested. *  * Special assert statements are used for testing <br> *  * @author Gabriele Schmidt * @version 4.0 27.02.2020 */public class JUnitTestPersonVO {	private static Class<PersonVO> myPersonVOClass;	@BeforeEach	public void initEach() {		myPersonVOClass = PersonVO.class;	}	@Test	@DisplayName("Class has 5 instance attributes")	public void test5Attributes() {				Field[] attributes = myPersonVOClass.getDeclaredFields();		assertEquals(5, attributes.length);	}	@Test	@DisplayName("Information hiding principle and Inheritance: Attributes are protected")	public void testAttributesPrivate() {				Field[] attributes = myPersonVOClass.getDeclaredFields();		int modifiersAttributes;		for (Field f : attributes) {			modifiersAttributes = f.getModifiers();			assertTrue(Modifier.isProtected(modifiersAttributes) || Modifier.isPrivate(modifiersAttributes) );		}	}		@Test 	@DisplayName("All Methods are public")	public void testMethodsPublic() {				Method[] methods = myPersonVOClass.getDeclaredMethods();		int modifiersMethods;		for (Method m : methods) {			modifiersMethods = m.getModifiers();			assertTrue(Modifier.isPublic(modifiersMethods));		}	}		@Test	@DisplayName("PersonVO has a default constructor and intialization constructors with 2 and 4 parameters")	public void testDefaultConstructor() {		Constructor[] constructors = myPersonVOClass.getConstructors();		int modifiersConstructor;		for (Constructor c : constructors) {			Class[] parameterTypes = c.getParameterTypes();			assertTrue(parameterTypes.length == 0 || parameterTypes.length == 2 || parameterTypes.length == 4);		}	}	}